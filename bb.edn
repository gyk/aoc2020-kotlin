{:paths ["."]
 :deps {}
 :min-bb-version "1.3.183"
 :tasks
   {:requires ([babashka.fs :as fs]
               [babashka.process :refer [sh]]
               [make]
               [cheshire.core :as json]
               [clojure.string :as str])
    ;; task hooks
    :init     (do (def windows?
                    (-> (System/getProperty "os.name")
                        (str/lower-case)
                        (str/starts-with? "win")))
                  (defn sh*
                    ([args] (sh* nil args))
                    ([opts args]
                     (apply shell
                       opts
                       (concat
                         (if windows? ["pwsh" "-C"] [])
                         (if (sequential? args) args [args])))))
                  (when (not= (.getEncoding *out*) "UTF8")
                    (alter-var-root (var *out*)
                                    (constantly (java.io.OutputStreamWriter.
                                                  (System/out)
                                                  "UTF8")))))
    :enter    (let [{:keys [name]} (current-task)]
                (println "ðŸš€" name))
    :leave    (let [{:keys [name]} (current-task)]
                (println "ðŸ”š" name))
    ;; tasks
    repl      {:doc              "Enter task REPL"
               :task             (clojure.main/repl)
               :override-builtin true}
    clean     {:doc  "Delete build output"
               :task (fs/delete-tree "./out")}
    build     {:doc  "Build solution of a single day"
               :task (make/build)}
    run       {:doc              "Run the solution"
               :task             (make/run)
               :override-builtin true}
    fmt       {:extra-deps {zprint/zprint {:mvn/version "1.2.8"}}
               :requires   ([zprint.main])
               :task       (apply zprint.main/-main
                             (concat ["{:search-config? true}"
                                      "-lfsw"]
                                     ["bb.edn"
                                      ".zprint.edn"
                                      "make.clj"]))}}}
